name: Test Code (Style, Tests)

on:
  workflow_dispatch:
  push:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'CODEOWNERS'
      - 'LICENSE'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Checkstyle:
    permissions:
      id-token: write
      checks: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-build

      - name: Run Checkstyle
        run: ./gradlew checkstyleMain checkstyleTest

  Dependency-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-build

      - name: Dependency rules report # possible severity values: <'fail'|'warn'|'ignore'>
        # run: ./gradlew buildHealth applyDependencyRules -Pdependency.analysis=warn -Pdependency.analysis.clear.artifacts=false
        # Disabled our dependency rules for now, as they are outdated and need to be refactored:
        # https://github.com/eclipse-dataspaceconnector/DataSpaceConnector/issues/2132
        # explicitly set 1G heap space because we've seen OOMs previously
        run: ./gradlew -Dorg.gradle.jvmargs="-Xmx1g" buildHealth -Pdependency.analysis=warn -Pdependency.analysis.clear.artifacts=false

      - name: Dependency analysis report
        run: cat build/reports/dependency-analysis/build-health-report.txt

  Unit-Tests:
    runs-on: ubuntu-latest
    env:
      JACOCO: true
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-build

      - name: Run unit tests
        uses: ./.github/actions/run-tests
        with:
          command: ./gradlew test jacocoTestReport

  Upload-Test-Report:
    needs:
      - Unit-Tests

    permissions:
      checks: write
      pull-requests: write

    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: "**/test-results/**/*.xml"

  Upload-Coverage-Report-To-Codecov:
    needs:
      - Unit-Tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      # Sources are needed for Codecov report
      - uses: actions/checkout@v3
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: CodeCov
        uses: codecov/codecov-action@v3